Qflow synthesis logfile created on Tue Jul 13 14:44:08 CST 2021
Running yosys for verilog parsing and synthesis
yosys  -s systemcomplete.ys

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Executing script file `systemcomplete.ys' --

1. Executing Liberty frontend.
Imported 32 cell types from liberty file.

2. Executing Verilog-2005 frontend: /mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v
Parsing Verilog input from `/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v' to AST representation.
Generating RTLIL representation for module `\systemcomplete'.
Generating RTLIL representation for module `\next_b'.
Generating RTLIL representation for module `\nonce_generator'.
Generating RTLIL representation for module `\concatenador'.
Generating RTLIL representation for module `\micro_hash_ucr'.
Generating RTLIL representation for module `\comparador'.
Generating RTLIL representation for module `\system_out'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \systemcomplete
Used module:     \system_out
Used module:     \comparador
Used module:     \micro_hash_ucr
Used module:     \concatenador
Used module:     \nonce_generator
Used module:     \next_b

3.1.2. Analyzing design hierarchy..
Top module:  \systemcomplete
Used module:     \system_out
Used module:     \comparador
Used module:     \micro_hash_ucr
Used module:     \concatenador
Used module:     \nonce_generator
Used module:     \next_b
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1024 empty switches in `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
Cleaned up 1024 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:943$318 in module system_out.
Marked 3 switch rules as full_case in process $proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:910$312 in module comparador.
Marked 1 switch rules as full_case in process $proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44 in module micro_hash_ucr.
Marked 2 switch rules as full_case in process $proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:114$5 in module nonce_generator.
Marked 1 switch rules as full_case in process $proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:91$1 in module next_b.
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\system_out.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:943$318'.
     1/2: $0\finished[0:0]
     2/2: $0\nonce_out[31:0]
Creating decoders for process `\comparador.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:910$312'.
     1/2: $0\valid[0:0]
     2/2: $0\next[0:0]
Creating decoders for process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
     1/115: $0\h[23:0] [23:16]
     2/115: $0\h[23:0] [15:8]
     3/115: $0\h[23:0] [7:0]
     4/115: $0\Wx[255:0] [247:240]
     5/115: $0\Wx[255:0] [239:232]
     6/115: $0\Wx[255:0] [231:224]
     7/115: $0\Wx[255:0] [223:216]
     8/115: $0\Wx[255:0] [215:208]
     9/115: $0\Wx[255:0] [207:200]
    10/115: $0\Wx[255:0] [199:192]
    11/115: $0\Wx[255:0] [191:184]
    12/115: $0\Wx[255:0] [183:176]
    13/115: $0\Wx[255:0] [175:168]
    14/115: $0\Wx[255:0] [167:160]
    15/115: $0\Wx[255:0] [159:152]
    16/115: $0\Wx[255:0] [151:144]
    17/115: $0\Wx[255:0] [143:136]
    18/115: $0\Wx[255:0] [135:128]
    19/115: $0\Wx[255:0] [127:120]
    20/115: $0\Wx[255:0] [119:112]
    21/115: $0\Wx[255:0] [111:104]
    22/115: $0\Wx[255:0] [103:96]
    23/115: $0\Wx[255:0] [95:88]
    24/115: $0\Wx[255:0] [87:80]
    25/115: $0\Wx[255:0] [79:72]
    26/115: $0\Wx[255:0] [71:64]
    27/115: $0\Wx[255:0] [63:56]
    28/115: $0\Wx[255:0] [55:48]
    29/115: $0\Wx[255:0] [47:40]
    30/115: $0\Wx[255:0] [39:32]
    31/115: $0\Wx[255:0] [31:24]
    32/115: $0\Wx[255:0] [23:16]
    33/115: $0\Wx[255:0] [15:8]
    34/115: $0\Wx[255:0] [7:0]
    35/115: $0\j[31:0]
    36/115: $0\pipe71[0:0]
    37/115: $0\pipe70[0:0]
    38/115: $0\pipe69[0:0]
    39/115: $0\pipe68[0:0]
    40/115: $0\pipe67[0:0]
    41/115: $0\pipe66[0:0]
    42/115: $0\pipe65[0:0]
    43/115: $0\pipe64[0:0]
    44/115: $0\pipe63[0:0]
    45/115: $0\pipe62[0:0]
    46/115: $0\pipe61[0:0]
    47/115: $0\pipe60[0:0]
    48/115: $0\pipe59[0:0]
    49/115: $0\pipe58[0:0]
    50/115: $0\pipe57[0:0]
    51/115: $0\pipe56[0:0]
    52/115: $0\pipe55[0:0]
    53/115: $0\pipe54[0:0]
    54/115: $0\pipe53[0:0]
    55/115: $0\pipe52[0:0]
    56/115: $0\pipe51[0:0]
    57/115: $0\pipe50[0:0]
    58/115: $0\pipe49[0:0]
    59/115: $0\pipe48[0:0]
    60/115: $0\pipe47[0:0]
    61/115: $0\pipe46[0:0]
    62/115: $0\pipe45[0:0]
    63/115: $0\pipe44[0:0]
    64/115: $0\pipe43[0:0]
    65/115: $0\pipe42[0:0]
    66/115: $0\pipe41[0:0]
    67/115: $0\pipe40[0:0]
    68/115: $0\pipe39[0:0]
    69/115: $0\pipe38[0:0]
    70/115: $0\pipe37[0:0]
    71/115: $0\pipe36[0:0]
    72/115: $0\pipe35[0:0]
    73/115: $0\pipe34[0:0]
    74/115: $0\pipe33[0:0]
    75/115: $0\pipe32[0:0]
    76/115: $0\pipe31[0:0]
    77/115: $0\pipe30[0:0]
    78/115: $0\pipe29[0:0]
    79/115: $0\pipe28[0:0]
    80/115: $0\pipe27[0:0]
    81/115: $0\pipe26[0:0]
    82/115: $0\pipe25[0:0]
    83/115: $0\pipe24[0:0]
    84/115: $0\pipe23[0:0]
    85/115: $0\pipe22[0:0]
    86/115: $0\pipe21[0:0]
    87/115: $0\pipe20[0:0]
    88/115: $0\pipe19[0:0]
    89/115: $0\pipe18[0:0]
    90/115: $0\pipe17[0:0]
    91/115: $0\pipe16[0:0]
    92/115: $0\pipe15[0:0]
    93/115: $0\pipe14[0:0]
    94/115: $0\pipe13[0:0]
    95/115: $0\pipe12[0:0]
    96/115: $0\pipe11[0:0]
    97/115: $0\pipe10[0:0]
    98/115: $0\pipe9[0:0]
    99/115: $0\pipe8[0:0]
   100/115: $0\pipe7[0:0]
   101/115: $0\pipe6[0:0]
   102/115: $0\pipe5[0:0]
   103/115: $0\pipe4[0:0]
   104/115: $0\pipe3[0:0]
   105/115: $0\pipe2[0:0]
   106/115: $0\pipe1[0:0]
   107/115: $0\a[7:0]
   108/115: $0\pipe0[0:0]
   109/115: $0\b[7:0]
   110/115: $1\j[31:0]
   111/115: $0\k[7:0]
   112/115: $0\x[7:0]
   113/115: $0\c[7:0]
   114/115: $0\valid_out[0:0]
   115/115: $0\Wx[255:0] [255:248]
Creating decoders for process `\concatenador.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:132$11'.
     1/2: $0\data_out[127:0] [127:32]
     2/2: $0\data_out[127:0] [31:0]
Creating decoders for process `\nonce_generator.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:114$5'.
     1/1: $0\nonce[31:0]
Creating decoders for process `\next_b.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:91$1'.
     1/2: $0\data_in_prev[95:0]
     2/2: $0\next_out[95:0]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\system_out.\nonce_out' using process `\system_out.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:943$318'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `\system_out.\finished' using process `\system_out.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:943$318'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `\comparador.\next' using process `\comparador.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:910$312'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `\comparador.\valid' using process `\comparador.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:910$312'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\h' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\valid_out' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\j' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\c' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\x' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\k' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1126' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\Wx' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1127' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\b' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1128' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe0' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1129' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\a' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1130' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe1' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1131' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe2' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1132' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe3' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1133' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe4' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe5' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1135' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe6' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1136' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe7' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1137' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe8' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1138' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe9' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1139' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe10' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1140' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe11' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1141' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe12' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1142' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe13' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1143' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe14' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1144' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe15' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1145' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe16' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1146' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe17' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1147' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe18' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1148' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe19' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1149' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe20' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1150' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe21' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1151' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe22' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1152' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe23' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1153' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe24' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1154' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe25' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1155' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe26' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1156' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe27' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1157' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe28' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1158' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe29' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1159' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe30' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1160' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe31' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1161' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe32' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1162' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe33' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1163' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe34' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1164' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe35' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1165' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe36' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1166' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe37' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1167' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe38' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1168' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe39' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1169' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe40' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1170' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe41' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1171' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe42' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1172' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe43' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1173' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe44' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1174' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe45' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1175' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe46' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1176' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe47' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1177' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe48' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1178' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe49' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1179' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe50' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1180' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe51' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1181' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe52' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1182' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe53' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1183' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe54' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1184' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe55' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1185' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe56' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1186' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe57' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1187' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe58' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1188' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe59' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1189' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe60' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1190' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe61' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1191' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe62' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1192' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe63' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1193' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe64' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1194' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe65' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1195' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe66' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1196' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe67' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1197' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe68' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1198' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe69' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1199' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe70' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1200' with positive edge clock.
Creating register for signal `\micro_hash_ucr.\pipe71' using process `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
  created $dff cell `$procdff$1201' with positive edge clock.
Creating register for signal `\concatenador.\data_out' using process `\concatenador.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:132$11'.
  created $dff cell `$procdff$1202' with positive edge clock.
Creating register for signal `\nonce_generator.\nonce' using process `\nonce_generator.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:114$5'.
  created $dff cell `$procdff$1203' with positive edge clock.
Creating register for signal `\next_b.\next_out' using process `\next_b.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:91$1'.
  created $dff cell `$procdff$1204' with positive edge clock.
Creating register for signal `\next_b.\data_in_prev' using process `\next_b.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:91$1'.
  created $dff cell `$procdff$1205' with positive edge clock.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `\system_out.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:943$318'.
Removing empty process `system_out.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:943$318'.
Found and cleaned up 3 empty switches in `\comparador.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:910$312'.
Removing empty process `comparador.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:910$312'.
Found and cleaned up 68 empty switches in `\micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
Removing empty process `micro_hash_ucr.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:235$44'.
Removing empty process `concatenador.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:132$11'.
Found and cleaned up 2 empty switches in `\nonce_generator.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:114$5'.
Removing empty process `nonce_generator.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:114$5'.
Found and cleaned up 3 empty switches in `\next_b.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:91$1'.
Removing empty process `next_b.$proc$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:91$1'.
Cleaned up 78 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module system_out.
<suppressed ~4 debug messages>
Optimizing module comparador.
<suppressed ~4 debug messages>
Optimizing module micro_hash_ucr.
<suppressed ~102 debug messages>
Optimizing module concatenador.
Optimizing module nonce_generator.
<suppressed ~3 debug messages>
Optimizing module next_b.
<suppressed ~6 debug messages>
Optimizing module systemcomplete.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \systemcomplete..
Removed 6 unused cells and 570 unused wires.
<suppressed ~14 debug messages>

3.5. Executing CHECK pass (checking for obvious problems).
checking module comparador..
checking module concatenador..
checking module micro_hash_ucr..
checking module next_b..
checking module nonce_generator..
checking module system_out..
checking module systemcomplete..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
<suppressed ~276 debug messages>
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 92 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \comparador..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \concatenador..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \micro_hash_ucr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \next_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1110.
Running muxtree optimizer on module \nonce_generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system_out..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \systemcomplete..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 1 multiplexer ports.
<suppressed ~120 debug messages>

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \comparador.
  Optimizing cells in module \concatenador.
  Optimizing cells in module \micro_hash_ucr.
  Optimizing cells in module \next_b.
  Optimizing cells in module \nonce_generator.
  Optimizing cells in module \system_out.
  Optimizing cells in module \systemcomplete.
Performed a total of 0 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
<suppressed ~3 debug messages>
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 1 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..
Removed 0 unused cells and 94 unused wires.
<suppressed ~2 debug messages>

3.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \comparador..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \concatenador..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \micro_hash_ucr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \next_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nonce_generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system_out..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \systemcomplete..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~121 debug messages>

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \comparador.
  Optimizing cells in module \concatenador.
  Optimizing cells in module \micro_hash_ucr.
  Optimizing cells in module \next_b.
  Optimizing cells in module \nonce_generator.
  Optimizing cells in module \system_out.
  Optimizing cells in module \systemcomplete.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

3.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell nonce_generator.$add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:119$10 ($add).

3.8. Executing PEEPOPT pass (run peephole optimizers).

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

3.10. Executing TECHMAP pass (map to technology primitives).

3.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~20 debug messages>

3.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module comparador:
  creating $alu model for $lt$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:917$315 ($lt): new $alu
  creating $alu model for $lt$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:917$316 ($lt): new $alu
  creating $alu cell for $lt$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:917$316: $auto$alumacc.cc:474:replace_alu$1208
  creating $alu cell for $lt$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:917$315: $auto$alumacc.cc:474:replace_alu$1219
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module concatenador:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module micro_hash_ucr:
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:545$89 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:545$90 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:556$97 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:567$104 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:578$111 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:589$118 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:600$125 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:611$132 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:622$139 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:633$146 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:644$153 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:655$160 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:666$167 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:677$174 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:688$181 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:699$188 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:710$195 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:721$202 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:732$209 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:743$216 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:754$223 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:765$230 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:776$237 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:787$244 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:798$251 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:809$258 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:820$265 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:831$272 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:842$279 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:853$286 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:864$293 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:875$300 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:882$306 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:887$308 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:888$309 ($add).
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:889$310 ($add).
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:889$310.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:888$309.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:887$308.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:882$306.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:875$300.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:864$293.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:853$286.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:842$279.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:831$272.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:820$265.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:809$258.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:798$251.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:787$244.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:776$237.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:765$230.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:754$223.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:743$216.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:732$209.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:721$202.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:710$195.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:699$188.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:688$181.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:677$174.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:666$167.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:655$160.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:644$153.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:633$146.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:622$139.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:611$132.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:600$125.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:589$118.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:578$111.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:567$104.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:556$97.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:545$90.
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:545$89.
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:545$89: $auto$alumacc.cc:474:replace_alu$1230
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:545$90: $auto$alumacc.cc:474:replace_alu$1233
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:556$97: $auto$alumacc.cc:474:replace_alu$1236
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:567$104: $auto$alumacc.cc:474:replace_alu$1239
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:578$111: $auto$alumacc.cc:474:replace_alu$1242
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:589$118: $auto$alumacc.cc:474:replace_alu$1245
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:600$125: $auto$alumacc.cc:474:replace_alu$1248
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:611$132: $auto$alumacc.cc:474:replace_alu$1251
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:622$139: $auto$alumacc.cc:474:replace_alu$1254
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:633$146: $auto$alumacc.cc:474:replace_alu$1257
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:644$153: $auto$alumacc.cc:474:replace_alu$1260
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:655$160: $auto$alumacc.cc:474:replace_alu$1263
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:666$167: $auto$alumacc.cc:474:replace_alu$1266
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:677$174: $auto$alumacc.cc:474:replace_alu$1269
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:688$181: $auto$alumacc.cc:474:replace_alu$1272
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:699$188: $auto$alumacc.cc:474:replace_alu$1275
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:710$195: $auto$alumacc.cc:474:replace_alu$1278
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:721$202: $auto$alumacc.cc:474:replace_alu$1281
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:732$209: $auto$alumacc.cc:474:replace_alu$1284
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:743$216: $auto$alumacc.cc:474:replace_alu$1287
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:754$223: $auto$alumacc.cc:474:replace_alu$1290
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:765$230: $auto$alumacc.cc:474:replace_alu$1293
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:776$237: $auto$alumacc.cc:474:replace_alu$1296
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:787$244: $auto$alumacc.cc:474:replace_alu$1299
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:798$251: $auto$alumacc.cc:474:replace_alu$1302
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:809$258: $auto$alumacc.cc:474:replace_alu$1305
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:820$265: $auto$alumacc.cc:474:replace_alu$1308
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:831$272: $auto$alumacc.cc:474:replace_alu$1311
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:842$279: $auto$alumacc.cc:474:replace_alu$1314
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:853$286: $auto$alumacc.cc:474:replace_alu$1317
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:864$293: $auto$alumacc.cc:474:replace_alu$1320
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:875$300: $auto$alumacc.cc:474:replace_alu$1323
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:882$306: $auto$alumacc.cc:474:replace_alu$1326
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:887$308: $auto$alumacc.cc:474:replace_alu$1329
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:888$309: $auto$alumacc.cc:474:replace_alu$1332
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:889$310: $auto$alumacc.cc:474:replace_alu$1335
  created 36 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module next_b:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module nonce_generator:
  creating $macc model for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:119$10 ($add).
  creating $alu model for $macc $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:119$10.
  creating $alu cell for $add$/mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/source/system_complete.v:119$10: $auto$alumacc.cc:474:replace_alu$1338
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module system_out:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module systemcomplete:
  created 0 $alu and 0 $macc cells.

3.12. Executing SHARE pass (SAT-based resource sharing).

3.13. Executing OPT pass (performing simple optimizations).

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \comparador..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \concatenador..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \micro_hash_ucr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \next_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nonce_generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system_out..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \systemcomplete..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~121 debug messages>

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \comparador.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1211: { $auto$alumacc.cc:490:replace_alu$1209 [0] $auto$alumacc.cc:490:replace_alu$1209 [1] $auto$alumacc.cc:490:replace_alu$1209 [2] $auto$alumacc.cc:490:replace_alu$1209 [3] $auto$alumacc.cc:490:replace_alu$1209 [4] $auto$alumacc.cc:490:replace_alu$1209 [5] $auto$alumacc.cc:490:replace_alu$1209 [6] $auto$alumacc.cc:490:replace_alu$1209 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1222: { $auto$alumacc.cc:490:replace_alu$1220 [0] $auto$alumacc.cc:490:replace_alu$1220 [1] $auto$alumacc.cc:490:replace_alu$1220 [2] $auto$alumacc.cc:490:replace_alu$1220 [3] $auto$alumacc.cc:490:replace_alu$1220 [4] $auto$alumacc.cc:490:replace_alu$1220 [5] $auto$alumacc.cc:490:replace_alu$1220 [6] $auto$alumacc.cc:490:replace_alu$1220 [7] }
  Optimizing cells in module \comparador.
  Optimizing cells in module \concatenador.
  Optimizing cells in module \micro_hash_ucr.
  Optimizing cells in module \next_b.
  Optimizing cells in module \nonce_generator.
  Optimizing cells in module \system_out.
  Optimizing cells in module \systemcomplete.
Performed a total of 2 changes.

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

3.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \comparador..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \concatenador..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \micro_hash_ucr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \next_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nonce_generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system_out..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \systemcomplete..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~121 debug messages>

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \comparador.
  Optimizing cells in module \concatenador.
  Optimizing cells in module \micro_hash_ucr.
  Optimizing cells in module \next_b.
  Optimizing cells in module \nonce_generator.
  Optimizing cells in module \system_out.
  Optimizing cells in module \systemcomplete.
Performed a total of 0 changes.

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

3.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

3.13.16. Finished OPT passes. (There is nothing left to do.)

3.14. Executing FSM pass (extract and optimize FSM).

3.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking micro_hash_ucr.k as FSM state register:
    Users of register don't seem to benefit from recoding.

3.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

3.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY pass.

3.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

3.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

3.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

3.18. Executing OPT pass (performing simple optimizations).

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
<suppressed ~6 debug messages>
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
<suppressed ~2 debug messages>
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
<suppressed ~1 debug messages>
Optimizing module systemcomplete.

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

3.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

3.18.5. Finished fast OPT passes.

3.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.20. Executing OPT pass (performing simple optimizations).

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \comparador..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \concatenador..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \micro_hash_ucr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \next_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nonce_generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system_out..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \systemcomplete..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~118 debug messages>

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \comparador.
  Optimizing cells in module \concatenador.
  Optimizing cells in module \micro_hash_ucr.
  Optimizing cells in module \next_b.
  Optimizing cells in module \nonce_generator.
  Optimizing cells in module \system_out.
  Optimizing cells in module \systemcomplete.
Performed a total of 0 changes.

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

3.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

3.20.9. Finished OPT passes. (There is nothing left to do.)

3.21. Executing TECHMAP pass (map to technology primitives).

3.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_and.
No more expansions possible.
<suppressed ~2343 debug messages>

3.22. Executing OPT pass (performing simple optimizations).

3.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
<suppressed ~20 debug messages>
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
<suppressed ~432 debug messages>
Optimizing module next_b.
Optimizing module nonce_generator.
<suppressed ~182 debug messages>
Optimizing module system_out.
Optimizing module systemcomplete.

3.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
<suppressed ~24 debug messages>
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
<suppressed ~744 debug messages>
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 256 cells.

3.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..
Removed 433 unused cells and 1332 unused wires.
<suppressed ~436 debug messages>

3.22.5. Finished fast OPT passes.

3.23. Executing ABC pass (technology mapping using ABC).

3.23.1. Extracting gate netlist of module `\comparador' to `<abc-temp-dir>/input.blif'..
Extracted 104 gates and 130 wires to a netlist network with 26 inputs and 2 outputs.

3.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.1.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       22
ABC RESULTS:              AOI3 cells:        6
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              OAI3 cells:        4
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       14
ABC RESULTS:        internal signals:      102
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:        2
Removing temp directory.

3.23.2. Extracting gate netlist of module `\concatenador' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.23.3. Extracting gate netlist of module `\micro_hash_ucr' to `<abc-temp-dir>/input.blif'..
Extracted 3726 gates and 4252 wires to a netlist network with 524 inputs and 393 outputs.

3.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      241
ABC RESULTS:            ANDNOT cells:      697
ABC RESULTS:              AOI3 cells:       83
ABC RESULTS:               MUX cells:     1440
ABC RESULTS:              NAND cells:       36
ABC RESULTS:               NOR cells:      168
ABC RESULTS:               NOT cells:      232
ABC RESULTS:              OAI3 cells:       42
ABC RESULTS:                OR cells:      144
ABC RESULTS:             ORNOT cells:       64
ABC RESULTS:              XNOR cells:      263
ABC RESULTS:               XOR cells:      421
ABC RESULTS:        internal signals:     3335
ABC RESULTS:           input signals:      524
ABC RESULTS:          output signals:      393
Removing temp directory.

3.23.4. Extracting gate netlist of module `\next_b' to `<abc-temp-dir>/input.blif'..
Extracted 288 gates and 483 wires to a netlist network with 194 inputs and 192 outputs.

3.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.4.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       96
ABC RESULTS:               MUX cells:      192
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       97
ABC RESULTS:           input signals:      194
ABC RESULTS:          output signals:      192
Removing temp directory.

3.23.5. Extracting gate netlist of module `\nonce_generator' to `<abc-temp-dir>/input.blif'..
Extracted 150 gates and 187 wires to a netlist network with 35 inputs and 32 outputs.

3.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.5.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       48
ABC RESULTS:               MUX cells:       31
ABC RESULTS:              NAND cells:       15
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:       32
ABC RESULTS:                OR cells:       20
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       30
ABC RESULTS:        internal signals:      120
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       32
Removing temp directory.

3.23.6. Extracting gate netlist of module `\system_out' to `<abc-temp-dir>/input.blif'..
Extracted 65 gates and 101 wires to a netlist network with 34 inputs and 33 outputs.

3.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.6.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       32
ABC RESULTS:              NAND cells:       32
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       34
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       33
Removing temp directory.

3.23.7. Extracting gate netlist of module `\systemcomplete' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.24. Executing OPT pass (performing simple optimizations).

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
<suppressed ~304 debug messages>
Optimizing module next_b.
<suppressed ~96 debug messages>
Optimizing module nonce_generator.
<suppressed ~31 debug messages>
Optimizing module system_out.
Optimizing module systemcomplete.

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

3.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..
Removed 1 unused cells and 2360 unused wires.
<suppressed ~6 debug messages>

3.24.5. Finished fast OPT passes.

3.25. Executing HIERARCHY pass (managing design hierarchy).

3.25.1. Analyzing design hierarchy..
Top module:  \systemcomplete
Used module:     \comparador
Used module:     \concatenador
Used module:     \micro_hash_ucr
Used module:     \next_b
Used module:     \nonce_generator
Used module:     \system_out

3.25.2. Analyzing design hierarchy..
Top module:  \systemcomplete
Used module:     \comparador
Used module:     \concatenador
Used module:     \micro_hash_ucr
Used module:     \next_b
Used module:     \nonce_generator
Used module:     \system_out
Removed 0 unused modules.

3.26. Printing statistics.

=== comparador ===

   Number of wires:                 75
   Number of wire bits:            105
   Number of public wires:           7
   Number of public wire bits:      37
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 70
     $_ANDNOT_                      22
     $_AOI3_                         6
     $_DFF_P_                        2
     $_NAND_                         3
     $_NOR_                          2
     $_NOT_                          1
     $_OAI3_                         4
     $_OAI4_                         2
     $_ORNOT_                        5
     $_OR_                           7
     $_XNOR_                         2
     $_XOR_                         14

=== concatenador ===

   Number of wires:                  5
   Number of wire bits:            258
   Number of public wires:           5
   Number of public wire bits:     258
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                128
     $_DFF_P_                      128

=== micro_hash_ucr ===

   Number of wires:               3603
   Number of wire bits:           4356
   Number of public wires:          85
   Number of public wire bits:     525
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4224
     $_ANDNOT_                     697
     $_AND_                        241
     $_AOI3_                        83
     $_DFF_P_                      393
     $_MUX_                       1440
     $_NAND_                        36
     $_NOR_                        168
     $_NOT_                        232
     $_OAI3_                        42
     $_ORNOT_                       64
     $_OR_                         144
     $_XNOR_                       263
     $_XOR_                        421

=== next_b ===

   Number of wires:                105
   Number of wire bits:            580
   Number of public wires:           6
   Number of public wire bits:     291
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                481
     $_ANDNOT_                      96
     $_DFF_P_                      192
     $_MUX_                        192
     $_NOT_                          1

=== nonce_generator ===

   Number of wires:                153
   Number of wire bits:            215
   Number of public wires:           5
   Number of public wire bits:      36
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                211
     $_ANDNOT_                      48
     $_DFF_P_                       32
     $_MUX_                         31
     $_NAND_                        15
     $_NOR_                          1
     $_NOT_                         31
     $_ORNOT_                        1
     $_OR_                          20
     $_XNOR_                         2
     $_XOR_                         30

=== system_out ===

   Number of wires:                 40
   Number of wire bits:            133
   Number of public wires:           6
   Number of public wire bits:      68
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 98
     $_ANDNOT_                      32
     $_DFF_P_                       33
     $_NAND_                        32
     $_ORNOT_                        1

=== systemcomplete ===

   Number of wires:                 13
   Number of wire bits:            422
   Number of public wires:          13
   Number of public wire bits:     422
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     comparador                      1
     concatenador                    1
     micro_hash_ucr                  1
     next_b                          1
     nonce_generator                 1
     system_out                      1

=== design hierarchy ===

   systemcomplete                    1
     comparador                      1
     concatenador                    1
     micro_hash_ucr                  1
     next_b                          1
     nonce_generator                 1
     system_out                      1

   Number of wires:               3994
   Number of wire bits:           6069
   Number of public wires:         127
   Number of public wire bits:    1637
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5212
     $_ANDNOT_                     895
     $_AND_                        241
     $_AOI3_                        89
     $_DFF_P_                      780
     $_MUX_                       1663
     $_NAND_                        86
     $_NOR_                        171
     $_NOT_                        265
     $_OAI3_                        46
     $_OAI4_                         2
     $_ORNOT_                       71
     $_OR_                         171
     $_XNOR_                       267
     $_XOR_                        465

3.27. Executing CHECK pass (checking for obvious problems).
checking module comparador..
checking module concatenador..
checking module micro_hash_ucr..
checking module next_b..
checking module nonce_generator..
checking module system_out..
checking module systemcomplete..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=176.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\comparador':
  mapped 2 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\concatenador':
  mapped 128 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\micro_hash_ucr':
  mapped 393 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\next_b':
  mapped 192 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\nonce_generator':
  mapped 32 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\system_out':
  mapped 33 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\systemcomplete':

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \comparador..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \concatenador..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \micro_hash_ucr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \next_b..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \nonce_generator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \system_out..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \systemcomplete..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \comparador.
  Optimizing cells in module \concatenador.
  Optimizing cells in module \micro_hash_ucr.
  Optimizing cells in module \next_b.
  Optimizing cells in module \nonce_generator.
  Optimizing cells in module \system_out.
  Optimizing cells in module \systemcomplete.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\comparador'.
Finding identical cells in module `\concatenador'.
Finding identical cells in module `\micro_hash_ucr'.
Finding identical cells in module `\next_b'.
Finding identical cells in module `\nonce_generator'.
Finding identical cells in module `\system_out'.
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

5.6. Executing OPT_RMDFF pass (remove dff with constant values).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \comparador..
Finding unused cells or wires in module \concatenador..
Finding unused cells or wires in module \micro_hash_ucr..
Finding unused cells or wires in module \next_b..
Finding unused cells or wires in module \nonce_generator..
Finding unused cells or wires in module \system_out..
Finding unused cells or wires in module \systemcomplete..

5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module comparador.
Optimizing module concatenador.
Optimizing module micro_hash_ucr.
Optimizing module next_b.
Optimizing module nonce_generator.
Optimizing module system_out.
Optimizing module systemcomplete.

5.9. Finished OPT passes. (There is nothing left to do.)

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `\comparador' to `<abc-temp-dir>/input.blif'..
Extracted 68 gates and 94 wires to a netlist network with 26 inputs and 2 outputs.

6.1.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.1.2. Re-integrating ABC results.
ABC RESULTS:           AOI21X1 cells:       11
ABC RESULTS:           AOI22X1 cells:        8
ABC RESULTS:             INVX1 cells:       26
ABC RESULTS:           NAND2X1 cells:       23
ABC RESULTS:           NAND3X1 cells:        7
ABC RESULTS:            NOR2X1 cells:       22
ABC RESULTS:           OAI21X1 cells:       11
ABC RESULTS:           OAI22X1 cells:        6
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:           XNOR2X1 cells:        6
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:       66
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:        2
Removing temp directory.

6.2. Extracting gate netlist of module `\concatenador' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

6.3. Extracting gate netlist of module `\micro_hash_ucr' to `<abc-temp-dir>/input.blif'..
Extracted 3831 gates and 4355 wires to a netlist network with 524 inputs and 393 outputs.

6.3.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:      253
ABC RESULTS:           AOI21X1 cells:      708
ABC RESULTS:           AOI22X1 cells:       28
ABC RESULTS:             INVX1 cells:      541
ABC RESULTS:            MUX2X1 cells:       18
ABC RESULTS:           NAND2X1 cells:      542
ABC RESULTS:           NAND3X1 cells:      207
ABC RESULTS:            NOR2X1 cells:      590
ABC RESULTS:            NOR3X1 cells:        2
ABC RESULTS:           OAI21X1 cells:     1253
ABC RESULTS:           OAI22X1 cells:       50
ABC RESULTS:             OR2X2 cells:       18
ABC RESULTS:           XNOR2X1 cells:      207
ABC RESULTS:            XOR2X1 cells:       52
ABC RESULTS:        internal signals:     3438
ABC RESULTS:           input signals:      524
ABC RESULTS:          output signals:      393
Removing temp directory.

6.4. Extracting gate netlist of module `\next_b' to `<abc-temp-dir>/input.blif'..
Extracted 289 gates and 483 wires to a netlist network with 194 inputs and 192 outputs.

6.4.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.4.2. Re-integrating ABC results.
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:            MUX2X1 cells:       96
ABC RESULTS:           NAND2X1 cells:       96
ABC RESULTS:            NOR2X1 cells:       96
ABC RESULTS:           OAI21X1 cells:       96
ABC RESULTS:        internal signals:       97
ABC RESULTS:           input signals:      194
ABC RESULTS:          output signals:      192
Removing temp directory.

6.5. Extracting gate netlist of module `\nonce_generator' to `<abc-temp-dir>/input.blif'..
Extracted 179 gates and 214 wires to a netlist network with 35 inputs and 32 outputs.

6.5.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.5.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       14
ABC RESULTS:           AOI21X1 cells:       19
ABC RESULTS:             INVX1 cells:       28
ABC RESULTS:           NAND2X1 cells:       27
ABC RESULTS:           NAND3X1 cells:       13
ABC RESULTS:            NOR2X1 cells:       34
ABC RESULTS:            NOR3X1 cells:       17
ABC RESULTS:           OAI21X1 cells:       24
ABC RESULTS:             OR2X2 cells:        7
ABC RESULTS:        internal signals:      147
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       32
Removing temp directory.

6.6. Extracting gate netlist of module `\system_out' to `<abc-temp-dir>/input.blif'..
Extracted 65 gates and 99 wires to a netlist network with 34 inputs and 33 outputs.

6.6.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.02 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.02 sec
ABC: Memory =    0.36 MB. Time =     0.02 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.6.2. Re-integrating ABC results.
ABC RESULTS:             INVX1 cells:       33
ABC RESULTS:           NAND2X1 cells:        1
ABC RESULTS:           NAND3X1 cells:       32
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       33
Removing temp directory.

6.7. Extracting gate netlist of module `\systemcomplete' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

7. Executing FLATTEN pass (flatten design).
Using template concatenador for cells of type concatenador.
Using template micro_hash_ucr for cells of type micro_hash_ucr.
Using template comparador for cells of type comparador.
Using template nonce_generator for cells of type nonce_generator.
Using template system_out for cells of type system_out.
Using template next_b for cells of type next_b.
<suppressed ~6 debug messages>
No more expansions possible.
Deleting now unused module comparador.
Deleting now unused module concatenador.
Deleting now unused module micro_hash_ucr.
Deleting now unused module next_b.
Deleting now unused module nonce_generator.
Deleting now unused module system_out.

8. Executing SETUNDEF pass (replace undef values with defined constants).
Removed 0 unused cells and 5280 unused wires.

9. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port systemcomplete.clk: Missing option -inpad.
Don't map input port systemcomplete.data_in: Missing option -inpad.
Mapping port systemcomplete.finished using BUFX2.
Mapping port systemcomplete.nonce_out using BUFX2.
Don't map input port systemcomplete.reset: Missing option -inpad.
Don't map input port systemcomplete.target: Missing option -inpad.

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module systemcomplete.

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \systemcomplete..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \systemcomplete.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\systemcomplete'.
Removed a total of 0 cells.

10.6. Executing OPT_RMDFF pass (remove dff with constant values).

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \systemcomplete..

10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module systemcomplete.

10.9. Finished OPT passes. (There is nothing left to do.)

11. Executing BLIF backend.

12. Printing statistics.

=== systemcomplete ===

   Number of wires:               4755
   Number of wire bits:           6145
   Number of public wires:        4755
   Number of public wire bits:    6145
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6039
     AND2X2                        267
     AOI21X1                       738
     AOI22X1                        36
     BUFX2                          33
     DFFPOSX1                      780
     INVX1                         629
     MUX2X1                        114
     NAND2X1                       689
     NAND3X1                       259
     NOR2X1                        742
     NOR3X1                         19
     OAI21X1                      1384
     OAI22X1                        56
     OR2X2                          27
     XNOR2X1                       213
     XOR2X1                         53

End of script. Logfile hash: 931259d6e5
CPU: user 3.17s system 0.16s, MEM: 62.65 MB total, 43.53 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 18% 19x opt_clean (0 sec), 17% 19x opt_expr (0 sec), ...
Running getpowerground to determine power and ground net names.
getpowerground.tcl  /usr/share/qflow/tech/osu018/osu018_stdcells.lef
Cleaning up output syntax
ypostproc.tcl systemcomplete_mapped.blif systemcomplete /usr/share/qflow/tech/osu018/osu018.sh vdd gnd 
Cleaning up blif file syntax
Running blifFanout (iterative)
Each iteration calls:
blifFanout -l 100 -c 20 -I systemcomplete_nofanout -s nullstring -p /usr/share/qflow/tech/osu018/osu018_stdcells.lib -b BUFX2,CLKBUF1 -i A,A -o Y,Y tmp.blif systemcomplete.blif

blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Top internal fanout is 288 (load 4387.62) from node _4283_,
driven by INVX1 with strength 58.615 (fF driven at latency 100)
Top fanout load-to-strength ratio is 74.8548 (latency = 7485.48 ps)
Top input node fanout is 780 (load 21780.3) from node clk.
Warning 1: load of 98.1475 is 1.62284 times greater than strongest gate MUX2X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 131: load of 347.833 is 5.97731 times greater than strongest gate NOR2X1
Warning 194: load of 2115.98 is 16.7375 times greater than strongest gate DFFPOSX1
Warning 231: load of 2590.82 is 44.5217 times greater than strongest gate NOR2X1
1102 gates exceed specified minimum load.
744 buffers were added.
295 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 5712    	Out: 5417    	-295
	"2" gates	In: 327    	Out: 499    	+172

Number of gates changed: 1039
gates resized: 1039
blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Top internal fanout is 43 (load 568.68) from node _4283_,
driven by INVX8 with strength 456.133 (fF driven at latency 100)
Top fanout load-to-strength ratio is 5.21 (latency = 521 ps)
Top input node fanout is 84 (load 3140.87) from node clk.
Warning 1: load of 254.14 is 1.12957 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 263.416 is 1.1708 times greater than strongest gate BUFX4
Warning 15: load of 284.037 is 1.26245 times greater than strongest gate BUFX4
Warning 19: load of 578.68 is 2.49845 times greater than strongest gate CLKBUF1
Warning 406: load of 161.278 is 2.77147 times greater than strongest gate NOR2X1
Warning 414: load of 222.913 is 3.83063 times greater than strongest gate NOR2X1
Warning 449: load of 263.499 is 4.52808 times greater than strongest gate NOR2X1
Warning 645: load of 305.889 is 5.25652 times greater than strongest gate NOR2X1
Warning 876: load of 314.26 is 5.38123 times greater than strongest gate NAND2X1
1326 gates exceed specified minimum load.
15 buffers were added.
691 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 5501    	Out: 5501    	+0
	"2" gates	In: 1159    	Out: 480    	-679
	"4" gates	In: 42    	Out: 709    	+667
	"8" gates	In: 81    	Out: 93    	+12

Number of gates changed: 706
gates resized: 706
blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Top internal fanout is 16 (load 568.68) from node _330_,
driven by INVX8 with strength 456.133 (fF driven at latency 100)
Top fanout load-to-strength ratio is 5.32757 (latency = 532.757 ps)
Top input node fanout is 9 (load 131.826) from node clk.
Warning 1: load of 464.661 is 2.06527 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 163: load of 578.68 is 2.49845 times greater than strongest gate CLKBUF1
Warning 979: load of 226.431 is 3.89109 times greater than strongest gate NOR2X1
Warning 1022: load of 263.499 is 4.52808 times greater than strongest gate NOR2X1
Warning 1220: load of 305.889 is 5.25652 times greater than strongest gate NOR2X1
Warning 1451: load of 314.26 is 5.38123 times greater than strongest gate NAND2X1
Warning 1466: load of 320.023 is 5.49941 times greater than strongest gate NOR2X1
1901 gates exceed specified minimum load.
0 buffers were added.
15 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 5501    	Out: 5501    	+0
	"2" gates	In: 495    	Out: 480    	-15
	"4" gates	In: 709    	Out: 724    	+15
	"8" gates	In: 93    	Out: 93    	+0

Number of gates changed: 15
gates resized: 15
blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Top internal fanout is 16 (load 568.68) from node _330_,
driven by INVX8 with strength 456.133 (fF driven at latency 100)
Top fanout load-to-strength ratio is 5.32757 (latency = 532.757 ps)
Top input node fanout is 9 (load 131.826) from node clk.
Warning 1: load of 576.475 is 2.56224 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 985: load of 226.431 is 3.89109 times greater than strongest gate NOR2X1
Warning 1028: load of 263.499 is 4.52808 times greater than strongest gate NOR2X1
Warning 1226: load of 305.889 is 5.25652 times greater than strongest gate NOR2X1
Warning 1457: load of 314.26 is 5.38123 times greater than strongest gate NAND2X1
Warning 1472: load of 320.023 is 5.49941 times greater than strongest gate NOR2X1
1907 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 5501    	Out: 5501    	+0
	"2" gates	In: 480    	Out: 480    	+0
	"4" gates	In: 724    	Out: 724    	+0
	"8" gates	In: 93    	Out: 93    	+0

Number of gates changed: 0
gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/synthesis
Files:
   Verilog: /mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/synthesis/systemcomplete.rtl.v
   Verilog: /mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/synthesis/systemcomplete.rtlnopwr.v
   Verilog: /mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/synthesis/systemcomplete.rtlbb.v
   Spice:   /mnt/d/Universidad/UCR/I-2021/Microelectronica/Proyecto2/Proyecto2-Microelectronica/Optimizacion_Area/synthesis/systemcomplete.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
spi2xspice.py "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" -io_time=1n -time=100p -idelay=10p -odelay=100p -cload=500f systemcomplete.spc systemcomplete.xspice

Synthesis script ended on Tue Jul 13 14:44:45 CST 2021
